type timeDependentPhysicsPackage; 

pop      500;
timeSteps   50;
XSdata   ce;
dataType ce; 
timeStepLength 1.E-1;
buffer 100;
combing 1;
precursors 1;

collisionOperator { neutronCE {type neutronCEtime; impGen 0; branchless 0;} } 

transportOperator { type transportOperatorDT;
                  } 

source {
  type pointSource;
  r (0 0 0);
  particle neutron;
  E 0.025E-06;
}

tally  {
  flux_short { type collisionClerk;
    map { type energyMap; grid log; min 0.000000001; max 5; N 300;}
    response (flux); flux {type fluxResponse;} filter {type timeFilter; Tmin 0.0; Tmax 0.00001;}
  }
  flux_long { type collisionClerk;
    map { type energyMap; grid log; min 0.000000001; max 5; N 300;}
    response (flux); flux {type fluxResponse;} filter {type timeFilter; Tmin 0.00001; Tmax 300.0;}
  }
  flux_total { type collisionClerk;
    map { type energyMap; grid log; min 0.000000001; max 5; N 300;}
    response (flux); flux {type fluxResponse;}
  }
  flux_time { type collisionClerk;
    map { type timeMap; grid lin; min 0.0; max 5.0; N 50;}
    response (flux); flux {type fluxResponse;}
  }
  weight_time0 { type collisionClerk;
    map { type timeMap; grid lin; min 0.0; max 5.0; N 50;}
    response (flux); flux {type weightResponse; moment 0;}
  }
  weight_time1 { type collisionClerk;
    map { type timeMap; grid lin; min 0.0; max 5.0; N 50;}
    response (flux); flux {type weightResponse; moment 1;}
  }
}

geometry { 
    type geometryStd;
    boundary (1 1 1 1 1 1);
    graph {type shrunk;}

    surfaces
    {
      squareBound { id 1; type box; origin ( 0.0  0.0  0.0); halfwidth (10.0 10.0 10.0); }  
    }


    cells
    {
    }

    universes
    {

      root
      {
	  id 1;
	  type rootUniverse; 
	  border 1;
	  fill hydrogen_with_uranium; 
      }
    }   
}

nuclearData {
  handles {
    ce { type aceNeutronDatabase; aceLibrary /home/tom13/SCONE/SCONE/fullLib.xsfile;} }
  materials {
 
    hydrogen_with_uranium {
      temp 12345;
      composition {
      1001.03    1.983E-05;
      92235.03   9.3472E-09;	  }
      }

} 
  
}
  
  
  
